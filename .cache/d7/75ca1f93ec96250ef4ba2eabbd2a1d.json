{"id":"node_modules/brain.js/dist/recurrent/matrix/multiply-b.js","dependencies":[{"name":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\node_modules\\brain.js\\dist\\recurrent\\matrix\\multiply-b.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\package.json","includedInParent":true,"mtime":1555160889145},{"name":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\node_modules\\brain.js\\package.json","includedInParent":true,"mtime":1555160889068}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = multiplyB;\n/**\n * multiplies {from} deltas to {left} and {right}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nfunction multiplyB(product, left, right) {\n  var leftRows = left.rows;\n  var leftColumns = left.columns;\n  var rightColumns = right.columns;\n\n  // loop over rows of left\n  for (var leftRow = 0; leftRow < leftRows; leftRow++) {\n    var leftRowBase = leftColumns * leftRow;\n    var rightRowBase = rightColumns * leftRow;\n    // loop over cols of right\n    for (var rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n\n      //loop over columns of left\n      for (var leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        var rightColumnBase = rightColumns * leftColumn;\n        var _leftRow = leftRowBase + leftColumn;\n        var rightRow = rightColumnBase + rightColumn;\n        var backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[_leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[_leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n","map":{"version":3,"sources":["../../../src/recurrent/matrix/multiply-b.js"],"names":["multiplyB","product","left","right","leftRows","rows","leftColumns","columns","rightColumns","leftRow","leftRowBase","rightRowBase","rightColumn","leftColumn","rightColumnBase","rightRow","backPropagateValue","deltas","weights"],"mappings":";;;;;kBAMwBA,S;AANxB;;;;;;AAMe,SAASA,SAAT,CAAmBC,OAAnB,EAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AACtD,MAAMC,WAAWF,KAAKG,IAAtB;AACA,MAAMC,cAAcJ,KAAKK,OAAzB;AACA,MAAMC,eAAeL,MAAMI,OAA3B;;AAEA;AACA,OAAI,IAAIE,UAAU,CAAlB,EAAqBA,UAAUL,QAA/B,EAAyCK,SAAzC,EAAoD;AAClD,QAAMC,cAAcJ,cAAcG,OAAlC;AACA,QAAME,eAAeH,eAAeC,OAApC;AACA;AACA,SAAI,IAAIG,cAAc,CAAtB,EAAyBA,cAAcJ,YAAvC,EAAqDI,aAArD,EAAoE;;AAElE;AACA,WAAI,IAAIC,aAAa,CAArB,EAAwBA,aAAaP,WAArC,EAAkDO,YAAlD,EAAgE;AAC9D,YAAMC,kBAAkBN,eAAeK,UAAvC;AACA,YAAMJ,WAAUC,cAAcG,UAA9B;AACA,YAAME,WAAWD,kBAAkBF,WAAnC;AACA,YAAMI,qBAAqBf,QAAQgB,MAAR,CAAeN,eAAeC,WAA9B,CAA3B;AACAV,aAAKe,MAAL,CAAYR,QAAZ,KAAwBN,MAAMe,OAAN,CAAcH,QAAd,IAA0BC,kBAAlD;AACAb,cAAMc,MAAN,CAAaF,QAAb,KAA0Bb,KAAKgB,OAAL,CAAaT,QAAb,IAAwBO,kBAAlD;AACD;AACF;AACF;AACF","file":"multiply-b.js","sourcesContent":["/**\n * multiplies {from} deltas to {left} and {right}\n * @param {Matrix} product\n * @param {Matrix} left\n * @param {Matrix} right\n */\nexport default function multiplyB(product, left, right) {\n  const leftRows = left.rows;\n  const leftColumns = left.columns;\n  const rightColumns = right.columns;\n\n  // loop over rows of left\n  for(let leftRow = 0; leftRow < leftRows; leftRow++) {\n    const leftRowBase = leftColumns * leftRow;\n    const rightRowBase = rightColumns * leftRow;\n    // loop over cols of right\n    for(let rightColumn = 0; rightColumn < rightColumns; rightColumn++) {\n\n      //loop over columns of left\n      for(let leftColumn = 0; leftColumn < leftColumns; leftColumn++) {\n        const rightColumnBase = rightColumns * leftColumn;\n        const leftRow = leftRowBase + leftColumn;\n        const rightRow = rightColumnBase + rightColumn;\n        const backPropagateValue = product.deltas[rightRowBase + rightColumn];\n        left.deltas[leftRow] += right.weights[rightRow] * backPropagateValue;\n        right.deltas[rightRow] += left.weights[leftRow] * backPropagateValue;\n      }\n    }\n  }\n}\n"]}},"hash":"035ab06bd79f42265ae058bed1fd762d","cacheData":{"env":{}}}