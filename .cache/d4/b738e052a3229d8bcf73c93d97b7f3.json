{"id":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","dependencies":[{"name":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\package.json","includedInParent":true,"mtime":1555160889145},{"name":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\node_modules\\gpu.js\\package.json","includedInParent":true,"mtime":1555160889068},{"name":"../web-gl/function-node","loc":{"line":11,"column":32},"parent":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\node_modules\\gpu.js\\dist\\backend\\web-gl2\\function-node.js","resolved":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\node_modules\\gpu.js\\dist\\backend\\web-gl\\function-node.js"}],"generated":{"js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLFunctionNode = require('../web-gl/function-node');\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n/** \n * @class WebGL2FunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends WebGLFunctionNode\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_WebGLFunctionNode) {\n\t_inherits(WebGL2FunctionNode, _WebGLFunctionNode);\n\n\tfunction WebGL2FunctionNode() {\n\t\t_classCallCheck(this, WebGL2FunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2FunctionNode.__proto__ || Object.getPrototypeOf(WebGL2FunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2FunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn this.astFunctionPrototype(this.getJsAST(), []).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), []);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2FunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\t// do we need to cast addressing vales to float?\n\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('intBitsToFloat(2139095039)');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + userParamName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + idtNode.name);\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn WebGL2FunctionNode;\n}(WebGLFunctionNode);\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following: \n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}","map":{"mappings":[{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":14,"column":0},"generated":{"line":14,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":15,"column":0},"generated":{"line":15,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":16,"column":0},"generated":{"line":16,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":17,"column":0},"generated":{"line":17,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":18,"column":0},"generated":{"line":18,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":19,"column":0},"generated":{"line":19,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":20,"column":0},"generated":{"line":20,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":21,"column":0},"generated":{"line":21,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":22,"column":0},"generated":{"line":22,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":23,"column":0},"generated":{"line":23,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":24,"column":0},"generated":{"line":24,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":25,"column":0},"generated":{"line":25,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":26,"column":0},"generated":{"line":26,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":27,"column":0},"generated":{"line":27,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":28,"column":0},"generated":{"line":28,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":29,"column":0},"generated":{"line":29,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":30,"column":0},"generated":{"line":30,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":31,"column":0},"generated":{"line":31,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":32,"column":0},"generated":{"line":32,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":33,"column":0},"generated":{"line":33,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":34,"column":0},"generated":{"line":34,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":35,"column":0},"generated":{"line":35,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":36,"column":0},"generated":{"line":36,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":37,"column":0},"generated":{"line":37,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":38,"column":0},"generated":{"line":38,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":39,"column":0},"generated":{"line":39,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":40,"column":0},"generated":{"line":40,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":41,"column":0},"generated":{"line":41,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":42,"column":0},"generated":{"line":42,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":43,"column":0},"generated":{"line":43,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":44,"column":0},"generated":{"line":44,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":45,"column":0},"generated":{"line":45,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":46,"column":0},"generated":{"line":46,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":47,"column":0},"generated":{"line":47,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":48,"column":0},"generated":{"line":48,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":49,"column":0},"generated":{"line":49,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":50,"column":0},"generated":{"line":50,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":51,"column":0},"generated":{"line":51,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":52,"column":0},"generated":{"line":52,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":53,"column":0},"generated":{"line":53,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":54,"column":0},"generated":{"line":54,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":55,"column":0},"generated":{"line":55,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":56,"column":0},"generated":{"line":56,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":57,"column":0},"generated":{"line":57,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":58,"column":0},"generated":{"line":58,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":59,"column":0},"generated":{"line":59,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":60,"column":0},"generated":{"line":60,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":61,"column":0},"generated":{"line":61,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":62,"column":0},"generated":{"line":62,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":63,"column":0},"generated":{"line":63,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":64,"column":0},"generated":{"line":64,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":65,"column":0},"generated":{"line":65,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":66,"column":0},"generated":{"line":66,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":67,"column":0},"generated":{"line":67,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":68,"column":0},"generated":{"line":68,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":69,"column":0},"generated":{"line":69,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":70,"column":0},"generated":{"line":70,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":71,"column":0},"generated":{"line":71,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":72,"column":0},"generated":{"line":72,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":73,"column":0},"generated":{"line":73,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":74,"column":0},"generated":{"line":74,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":75,"column":0},"generated":{"line":75,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":76,"column":0},"generated":{"line":76,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":77,"column":0},"generated":{"line":77,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":78,"column":0},"generated":{"line":78,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":79,"column":0},"generated":{"line":79,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":80,"column":0},"generated":{"line":80,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":81,"column":0},"generated":{"line":81,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":82,"column":0},"generated":{"line":82,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":83,"column":0},"generated":{"line":83,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":84,"column":0},"generated":{"line":84,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":85,"column":0},"generated":{"line":85,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":86,"column":0},"generated":{"line":86,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":87,"column":0},"generated":{"line":87,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":88,"column":0},"generated":{"line":88,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":89,"column":0},"generated":{"line":89,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":90,"column":0},"generated":{"line":90,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":91,"column":0},"generated":{"line":91,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":92,"column":0},"generated":{"line":92,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":93,"column":0},"generated":{"line":93,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":94,"column":0},"generated":{"line":94,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":95,"column":0},"generated":{"line":95,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":96,"column":0},"generated":{"line":96,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":97,"column":0},"generated":{"line":97,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":98,"column":0},"generated":{"line":98,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":99,"column":0},"generated":{"line":99,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":100,"column":0},"generated":{"line":100,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":101,"column":0},"generated":{"line":101,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":102,"column":0},"generated":{"line":102,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":103,"column":0},"generated":{"line":103,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":104,"column":0},"generated":{"line":104,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":105,"column":0},"generated":{"line":105,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":106,"column":0},"generated":{"line":106,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":107,"column":0},"generated":{"line":107,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":108,"column":0},"generated":{"line":108,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":109,"column":0},"generated":{"line":109,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":110,"column":0},"generated":{"line":110,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":111,"column":0},"generated":{"line":111,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":112,"column":0},"generated":{"line":112,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":113,"column":0},"generated":{"line":113,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":114,"column":0},"generated":{"line":114,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":115,"column":0},"generated":{"line":115,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":116,"column":0},"generated":{"line":116,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":117,"column":0},"generated":{"line":117,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":118,"column":0},"generated":{"line":118,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":119,"column":0},"generated":{"line":119,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":120,"column":0},"generated":{"line":120,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":121,"column":0},"generated":{"line":121,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":122,"column":0},"generated":{"line":122,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":123,"column":0},"generated":{"line":123,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":124,"column":0},"generated":{"line":124,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":125,"column":0},"generated":{"line":125,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":126,"column":0},"generated":{"line":126,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":127,"column":0},"generated":{"line":127,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":128,"column":0},"generated":{"line":128,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":129,"column":0},"generated":{"line":129,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":130,"column":0},"generated":{"line":130,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":131,"column":0},"generated":{"line":131,"column":0}},{"source":"node_modules/gpu.js/dist/backend/web-gl2/function-node.js","original":{"line":132,"column":0},"generated":{"line":132,"column":0}}],"sources":{"node_modules/gpu.js/dist/backend/web-gl2/function-node.js":"'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar WebGLFunctionNode = require('../web-gl/function-node');\nvar DECODE32_ENCODE32 = /decode32\\(\\s+encode32\\(/g;\nvar ENCODE32_DECODE32 = /encode32\\(\\s+decode32\\(/g;\n\n/** \n * @class WebGL2FunctionNode\n *\n * @desc [INTERNAL] Takes in a function node, and does all the AST voodoo required to generate its respective webGL code.\n *\n * @extends WebGLFunctionNode\n *\n * @returns the converted webGL function string\n *\n */\nmodule.exports = function (_WebGLFunctionNode) {\n\t_inherits(WebGL2FunctionNode, _WebGLFunctionNode);\n\n\tfunction WebGL2FunctionNode() {\n\t\t_classCallCheck(this, WebGL2FunctionNode);\n\n\t\treturn _possibleConstructorReturn(this, (WebGL2FunctionNode.__proto__ || Object.getPrototypeOf(WebGL2FunctionNode)).apply(this, arguments));\n\t}\n\n\t_createClass(WebGL2FunctionNode, [{\n\t\tkey: 'generate',\n\t\tvalue: function generate() {\n\t\t\tif (this.debug) {\n\t\t\t\tconsole.log(this);\n\t\t\t}\n\t\t\tif (this.prototypeOnly) {\n\t\t\t\treturn this.astFunctionPrototype(this.getJsAST(), []).join('').trim();\n\t\t\t} else {\n\t\t\t\tthis.functionStringArray = this.astGeneric(this.getJsAST(), []);\n\t\t\t}\n\t\t\tthis.functionString = webGlRegexOptimize(this.functionStringArray.join('').trim());\n\t\t\treturn this.functionString;\n\t\t}\n\n\t\t/**\n   * @memberOf WebGL2FunctionNode#\n   * @function\n   * @name astIdentifierExpression\n   *\n   * @desc Parses the abstract syntax tree for *identifier* expression\n   *\n   * @param {Object} idtNode - An ast Node\n   * @param {Array} retArr - return array string\n   *\n   * @returns {Array} the append retArr\n   */\n\n\t}, {\n\t\tkey: 'astIdentifierExpression',\n\t\tvalue: function astIdentifierExpression(idtNode, retArr) {\n\t\t\tif (idtNode.type !== 'Identifier') {\n\t\t\t\tthrow this.astErrorOutput('IdentifierExpression - not an Identifier', idtNode);\n\t\t\t}\n\n\t\t\t// do we need to cast addressing vales to float?\n\t\t\tvar castFloat = !this.isState('in-get-call-parameters');\n\n\t\t\tswitch (idtNode.name) {\n\t\t\t\tcase 'gpu_threadX':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.x');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadY':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.y');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_threadZ':\n\t\t\t\t\tcastFloat && retArr.push('float(');\n\t\t\t\t\tretArr.push('threadId.z');\n\t\t\t\t\tcastFloat && retArr.push(')');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputX':\n\t\t\t\t\tretArr.push('uOutputDim.x');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputY':\n\t\t\t\t\tretArr.push('uOutputDim.y');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'gpu_outputZ':\n\t\t\t\t\tretArr.push('uOutputDim.z');\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'Infinity':\n\t\t\t\t\tretArr.push('intBitsToFloat(2139095039)');\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tvar userParamName = this.getUserParamName(idtNode.name);\n\t\t\t\t\tif (userParamName !== null) {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + userParamName);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.pushParameter(retArr, 'user_' + idtNode.name);\n\t\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn retArr;\n\t\t}\n\t}]);\n\n\treturn WebGL2FunctionNode;\n}(WebGLFunctionNode);\n\n/**\n * @ignore\n * @function\n * @name webgl_regex_optimize\n *\n * @desc [INTERNAL] Takes the near final webgl function string, and do regex search and replacments.\n * For voodoo optimize out the following: \n *\n * - decode32(encode32( <br>\n * - encode32(decode32( <br>\n *\n * @param {String} inStr - The webGl function String\n *\n */\nfunction webGlRegexOptimize(inStr) {\n\treturn inStr.replace(DECODE32_ENCODE32, '((').replace(ENCODE32_DECODE32, '((');\n}"},"lineCount":132}},"hash":"040d869f4666e1459e055224905c9bd5","cacheData":{"env":{}}}