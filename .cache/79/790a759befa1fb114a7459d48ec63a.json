{"id":"node_modules/brain.js/dist/utilities/array-lookup-table.js","dependencies":[{"name":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\node_modules\\brain.js\\dist\\utilities\\array-lookup-table.js.map","includedInParent":true,"mtime":499162500000},{"name":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\package.json","includedInParent":true,"mtime":1555160889145},{"name":"C:\\Users\\dnesov\\Documents\\GitHub\\NeuralNetExperiments\\node_modules\\brain.js\\package.json","includedInParent":true,"mtime":1555160889068}],"generated":{"js":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = ArrayLookupTable;\nfunction ArrayLookupTable(data, prop) {\n  this.length = 0;\n  this.prop = prop;\n  var table = this.table = {};\n  for (var i = 0; i < data.length; i++) {\n    var datum = data[i];\n    var input = datum[prop];\n    for (var j = 0; j < input.length; j++) {\n      for (var p in input[j]) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n};\n","map":{"version":3,"sources":["../../src/utilities/array-lookup-table.js"],"names":["ArrayLookupTable","data","prop","length","table","i","datum","input","j","p","hasOwnProperty"],"mappings":";;;;;kBAAwBA,gB;AAAT,SAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,IAAhC,EAAsC;AACnD,OAAKC,MAAL,GAAc,CAAd;AACA,OAAKD,IAAL,GAAYA,IAAZ;AACA,MAAME,QAAQ,KAAKA,KAAL,GAAa,EAA3B;AACA,OAAK,IAAIC,IAAI,CAAb,EAAgBA,IAAIJ,KAAKE,MAAzB,EAAiCE,GAAjC,EAAsC;AACpC,QAAMC,QAAQL,KAAKI,CAAL,CAAd;AACA,QAAME,QAAQD,MAAMJ,IAAN,CAAd;AACA,SAAK,IAAIM,IAAI,CAAb,EAAgBA,IAAID,MAAMJ,MAA1B,EAAkCK,GAAlC,EAAuC;AACrC,WAAK,IAAIC,CAAT,IAAcF,MAAMC,CAAN,CAAd,EAAwB;AACtB,YAAIJ,MAAMM,cAAN,CAAqBD,CAArB,CAAJ,EAA6B;AAC7BL,cAAMK,CAAN,IAAW,KAAKN,MAAL,EAAX;AACD;AACF;AACF;AACF","file":"array-lookup-table.js","sourcesContent":["export default function ArrayLookupTable(data, prop) {\n  this.length = 0;\n  this.prop = prop;\n  const table = this.table = {};\n  for (let i = 0; i < data.length; i++) {\n    const datum = data[i];\n    const input = datum[prop];\n    for (let j = 0; j < input.length; j++) {\n      for (let p in input[j]) {\n        if (table.hasOwnProperty(p)) continue;\n        table[p] = this.length++;\n      }\n    }\n  }\n};"]}},"hash":"31ff6d7b58e99d4b81c32fa59d83bc81","cacheData":{"env":{}}}